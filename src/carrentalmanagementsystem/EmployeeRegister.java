/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carrentalmanagementsystem;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Xristos
 */
public class EmployeeRegister extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeRegister
     */
    public EmployeeRegister() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        register_label = new javax.swing.JLabel();
        register_logo = new javax.swing.JLabel();
        exit_icon = new javax.swing.JLabel();
        minimize_icon = new javax.swing.JLabel();
        user_icon = new javax.swing.JLabel();
        key_icon = new javax.swing.JLabel();
        username_text = new javax.swing.JTextField();
        username_label = new javax.swing.JLabel();
        password_field = new javax.swing.JPasswordField();
        password_label = new javax.swing.JLabel();
        register_button = new javax.swing.JButton();
        password_label1 = new javax.swing.JLabel();
        password_field1 = new javax.swing.JPasswordField();
        phone_label = new javax.swing.JLabel();
        phone_field = new javax.swing.JTextField();
        address_label = new javax.swing.JLabel();
        address_field = new javax.swing.JTextField();
        phone_icon = new javax.swing.JLabel();
        address_icon = new javax.swing.JLabel();
        fullname_text = new javax.swing.JTextField();
        fullname_label = new javax.swing.JLabel();
        business_password_label = new javax.swing.JLabel();
        business_password_field = new javax.swing.JPasswordField();
        backicon = new javax.swing.JLabel();
        backtext = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));
        jPanel3.setPreferredSize(new java.awt.Dimension(1200, 700));

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        register_label.setFont(new java.awt.Font("Calibri", 3, 24)); // NOI18N
        register_label.setForeground(new java.awt.Color(255, 255, 255));
        register_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        register_label.setText("Register");
        register_label.setMaximumSize(new java.awt.Dimension(391, 300));

        register_logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        register_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/note (2).png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(register_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(register_logo, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(register_logo, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(register_label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        exit_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exit_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/exit.png"))); // NOI18N
        exit_icon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_iconMouseClicked(evt);
            }
        });

        minimize_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimize_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/minimize.png"))); // NOI18N
        minimize_icon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimize_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimize_iconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimize_iconMouseEntered(evt);
            }
        });

        user_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        user_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/user (1).png"))); // NOI18N
        user_icon.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        user_icon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        key_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/key.png"))); // NOI18N
        key_icon.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        username_text.setForeground(new java.awt.Color(153, 153, 153));
        username_text.setText("username");
        username_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                username_textFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                username_textFocusLost(evt);
            }
        });
        username_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                username_textActionPerformed(evt);
            }
        });

        username_label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        username_label.setForeground(new java.awt.Color(255, 255, 255));
        username_label.setText("Username:");

        password_field.setForeground(new java.awt.Color(153, 153, 153));
        password_field.setText("password");
        password_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                password_fieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                password_fieldFocusLost(evt);
            }
        });
        password_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                password_fieldActionPerformed(evt);
            }
        });

        password_label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        password_label.setForeground(new java.awt.Color(255, 255, 255));
        password_label.setText("Password:");

        register_button.setText("Register");
        register_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        register_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                register_buttonActionPerformed(evt);
            }
        });

        password_label1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        password_label1.setForeground(new java.awt.Color(255, 255, 255));
        password_label1.setText("Confirm Password:");

        password_field1.setForeground(new java.awt.Color(153, 153, 153));
        password_field1.setText("password");
        password_field1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                password_field1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                password_field1FocusLost(evt);
            }
        });
        password_field1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                password_field1ActionPerformed(evt);
            }
        });

        phone_label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        phone_label.setForeground(new java.awt.Color(255, 255, 255));
        phone_label.setText("Phone Number:");

        phone_field.setForeground(new java.awt.Color(153, 153, 153));
        phone_field.setText("phone number");
        phone_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                phone_fieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                phone_fieldFocusLost(evt);
            }
        });
        phone_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phone_fieldActionPerformed(evt);
            }
        });

        address_label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        address_label.setForeground(new java.awt.Color(255, 255, 255));
        address_label.setText("Address:");

        address_field.setForeground(new java.awt.Color(153, 153, 153));
        address_field.setText("address");
        address_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                address_fieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                address_fieldFocusLost(evt);
            }
        });
        address_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                address_fieldActionPerformed(evt);
            }
        });
        address_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                address_fieldKeyPressed(evt);
            }
        });

        phone_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        phone_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/phone.png"))); // NOI18N
        phone_icon.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        address_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        address_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/address.png"))); // NOI18N
        address_icon.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        fullname_text.setForeground(new java.awt.Color(153, 153, 153));
        fullname_text.setText("fullname");
        fullname_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fullname_textFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fullname_textFocusLost(evt);
            }
        });
        fullname_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullname_textActionPerformed(evt);
            }
        });

        fullname_label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fullname_label.setForeground(new java.awt.Color(255, 255, 255));
        fullname_label.setText("FullName:");

        business_password_label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        business_password_label.setForeground(new java.awt.Color(255, 255, 255));
        business_password_label.setText("Business Password:");

        business_password_field.setForeground(new java.awt.Color(153, 153, 153));
        business_password_field.setText("password");
        business_password_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                business_password_fieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                business_password_fieldFocusLost(evt);
            }
        });
        business_password_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                business_password_fieldActionPerformed(evt);
            }
        });

        backicon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout.png"))); // NOI18N
        backicon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backicon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backiconMouseClicked(evt);
            }
        });

        backtext.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backtext.setForeground(new java.awt.Color(255, 255, 255));
        backtext.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backtext.setText("Back");
        backtext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backtext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backtextMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(189, 189, 189)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(user_icon, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(key_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(phone_icon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(address_icon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(password_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fullname_label, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(business_password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(username_text, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(fullname_text, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(password_field, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(password_field1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(business_password_field, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE))
                            .addComponent(phone_field, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(username_label, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(minimize_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(exit_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phone_label, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(address_label, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(backicon, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(backtext, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(address_field, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                                        .addComponent(register_button, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(41, 41, 41)))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(username_label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minimize_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                .addComponent(username_text, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(fullname_label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fullname_text, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(user_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(exit_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(password_field, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(142, 142, 142)
                                .addComponent(business_password_field, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(key_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(phone_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(address_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(password_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(password_field1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(business_password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(phone_label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phone_field, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(address_label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(address_field, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(register_button, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(backicon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(backtext, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exit_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_iconMouseClicked
        System.exit(0);  //system exit
    }//GEN-LAST:event_exit_iconMouseClicked

    private void minimize_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize_iconMouseClicked
        this.setState(CustomerLogin.ICONIFIED); //minimize window
    }//GEN-LAST:event_minimize_iconMouseClicked

    private void minimize_iconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize_iconMouseEntered

    }//GEN-LAST:event_minimize_iconMouseEntered

    private void username_textFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_username_textFocusGained
        // clear the textfield on focus if the text is "username"
        if(username_text.getText().trim().toLowerCase().equals("username"))
        {
            username_text.setText("");
            username_text.setForeground(Color.black);
        }
    }//GEN-LAST:event_username_textFocusGained

    private void username_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_username_textFocusLost
        // if the text field is equal to "username" or empty, set the "username" text
        //in the empty field on focus lost event
        if(username_text.getText().trim().equals("") || username_text.getText().trim().toLowerCase().equals("username"))
        {
            username_text.setText("username");
            username_text.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_username_textFocusLost

    private void username_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_username_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_username_textActionPerformed

    private void password_fieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_password_fieldFocusGained
        //clear the password field on focus if text is "password"
        String pass = String.valueOf(password_field.getPassword());

        if(pass.trim().toLowerCase().equals("password"))
        {
            password_field.setText("");
            password_field.setForeground(Color.black);
        }
    }//GEN-LAST:event_password_fieldFocusGained

    private void password_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_password_fieldFocusLost
        // if the password field is equal to password or empty, set the "password" text
        //in the empty field on focus lost event
        String pass = String.valueOf(password_field.getPassword());

        if(pass.trim().equals("") || pass.trim().toLowerCase().equals("password"))
        {
            password_field.setText("password");
            password_field.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_password_fieldFocusLost

    private void password_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_password_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_password_fieldActionPerformed

    private void register_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_register_buttonActionPerformed
        String fullname =  fullname_text.getText();
        String username = username_text.getText();
        String password = String.valueOf(password_field.getPassword());
        String confirm_password = String.valueOf(password_field1.getPassword());
        String business_password = String.valueOf(business_password_field.getPassword());
        String phone =  phone_field.getText();
        String address = address_field.getText();
        
        if(verifyFields())
        {
            if(!checkUsername(username))
            {
                PreparedStatement ps;
                ResultSet st;
                String registerUserQuery = "INSERT INTO `employee`( `username`, `fullname`, `password`, `business_password`, `phone`, `address`) VALUES (?,?,?,?,?,?)";
                
                try {
                    
                    ps = CarRentalManagementSystem.getConnection().prepareStatement(registerUserQuery);
                    ps.setString(1,username);
                    ps.setString(2, fullname);
                    ps.setString(3, password);
                    ps.setString(4, business_password);
                    ps.setString(5,phone);
                    ps.setString(6, address);
                    
                     if(ps.executeUpdate() != 0){
                            JOptionPane.showMessageDialog(null, "Your Account Has Been Created");
                            
                            //open menu form
                              SelectStore1 form = new SelectStore1();
                              form.setVisible(true);
                              form.pack();
                              form.setLocationRelativeTo(null);
                             //close the current form(login form)
                              this.dispose();
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "Error: Check Your Information");
                        }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(EmployeeRegister.class.getName()).log(Level.SEVERE, null, ex);
                }
               
            }
        }
        
    }//GEN-LAST:event_register_buttonActionPerformed

    private void password_field1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_password_field1FocusGained
        //clear the password field on focus if text is "password"
        String pass = String.valueOf(password_field1.getPassword());

        if(pass.trim().toLowerCase().equals("password"))
        {
            password_field1.setText("");
            password_field1.setForeground(Color.black);
        }
    }//GEN-LAST:event_password_field1FocusGained

    private void password_field1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_password_field1FocusLost
       // if the password field is equal to password or empty, set the "password" text
        //in the empty field on focus lost event
        String pass = String.valueOf(password_field1.getPassword());

        if(pass.trim().equals("") || pass.trim().toLowerCase().equals("password"))
        {
            password_field1.setText("password");
            password_field1.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_password_field1FocusLost

    private void password_field1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_password_field1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_password_field1ActionPerformed

    private void phone_fieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phone_fieldFocusGained
        // clear the textfield on focus if the text is "fullname"
        if(phone_field.getText().trim().toLowerCase().equals("phone number"))
        {
            phone_field.setText("");
            phone_field.setForeground(Color.black);
        }
    }//GEN-LAST:event_phone_fieldFocusGained

    private void phone_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phone_fieldFocusLost
       // if the text field is equal to "fullname" or empty, set the "fullname" text
        //in the empty field on focus lost event
        if(phone_field.getText().trim().equals("") || phone_field.getText().trim().toLowerCase().equals("phone number"))
        {
            phone_field.setText("phone number");
            phone_field.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_phone_fieldFocusLost

    private void phone_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phone_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phone_fieldActionPerformed

    private void address_fieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_address_fieldFocusGained
        // clear the textfield on focus if the text is "fullname"
        if(address_field.getText().trim().toLowerCase().equals("address"))
        {
            address_field.setText("");
            address_field.setForeground(Color.black);
        }
    }//GEN-LAST:event_address_fieldFocusGained

    private void address_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_address_fieldFocusLost
        // if the text field is equal to "fullname" or empty, set the "fullname" text
        //in the empty field on focus lost event
        if(address_field.getText().trim().equals("") || address_field.getText().trim().toLowerCase().equals("address"))
        {
            address_field.setText("address");
            address_field.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_address_fieldFocusLost

    private void address_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_address_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_address_fieldActionPerformed

    private void fullname_textFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fullname_textFocusGained
        // clear the textfield on focus if the text is "fullname"
        if(fullname_text.getText().trim().toLowerCase().equals("fullname"))
        {
            fullname_text.setText("");
            fullname_text.setForeground(Color.black);
        }
    }//GEN-LAST:event_fullname_textFocusGained

    private void fullname_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fullname_textFocusLost
        // if the text field is equal to "fullname" or empty, set the "fullname" text
        //in the empty field on focus lost event
        if(fullname_text.getText().trim().equals("") || fullname_text.getText().trim().toLowerCase().equals("fullname"))
        {
            fullname_text.setText("fullname");
            fullname_text.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_fullname_textFocusLost

    private void fullname_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullname_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fullname_textActionPerformed

    private void business_password_fieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_business_password_fieldFocusGained
        //clear the password field on focus if text is "password"
        String pass = String.valueOf(business_password_field.getPassword());
        
        if(pass.trim().toLowerCase().equals("password"))
        {
            business_password_field.setText("");
            business_password_field.setForeground(Color.black);
        }
    }//GEN-LAST:event_business_password_fieldFocusGained

    private void business_password_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_business_password_fieldFocusLost
        // if the password field is equal to password or empty, set the "password" text
        //in the empty field on focus lost event
         String pass = String.valueOf(business_password_field.getPassword());
        
        if(pass.trim().equals("") || pass.trim().toLowerCase().equals("password"))
        {
            business_password_field.setText("password");
            business_password_field.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_business_password_fieldFocusLost

    private void business_password_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_business_password_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_business_password_fieldActionPerformed

    private void backiconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backiconMouseClicked
        EmployeeLogin lf = new EmployeeLogin();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_backiconMouseClicked

    private void backtextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtextMouseClicked
        EmployeeLogin lf = new EmployeeLogin();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_backtextMouseClicked

    private void address_fieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_address_fieldKeyPressed
         if(evt.getKeyCode()==KeyEvent.VK_ENTER){
                String fullname =  fullname_text.getText();
        String username = username_text.getText();
        String password = String.valueOf(password_field.getPassword());
        String confirm_password = String.valueOf(password_field1.getPassword());
        String business_password = String.valueOf(business_password_field.getPassword());
        String phone =  phone_field.getText();
        String address = address_field.getText();
        
        if(verifyFields())
        {
            if(!checkUsername(username))
            {
                PreparedStatement ps;
                ResultSet st;
                String registerUserQuery = "INSERT INTO `employee`( `username`, `fullname`, `password`, `business_password`, `phone`, `address`) VALUES (?,?,?,?,?,?)";
                
                try {
                    
                    ps = CarRentalManagementSystem.getConnection().prepareStatement(registerUserQuery);
                    ps.setString(1,username);
                    ps.setString(2, fullname);
                    ps.setString(3, password);
                    ps.setString(4, business_password);
                    ps.setString(5,phone);
                    ps.setString(6, address);
                    
                     if(ps.executeUpdate() != 0){
                            JOptionPane.showMessageDialog(null, "Your Account Has Been Created");
                            
                            //open menu form
                              SelectStore1 form = new SelectStore1();
                              form.setVisible(true);
                              form.pack();
                              form.setLocationRelativeTo(null);
                             //close the current form(login form)
                              this.dispose();
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "Error: Check Your Information");
                        }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(EmployeeRegister.class.getName()).log(Level.SEVERE, null, ex);
                }
               
            }
        }
               
      }
        
    
    }//GEN-LAST:event_address_fieldKeyPressed

    public boolean verifyFields()
    {
        String fullname =  fullname_text.getText();
        String username = username_text.getText();
        String password = String.valueOf(password_field.getPassword());
        String confirm_password = String.valueOf(password_field1.getPassword());
        String business_password = String.valueOf(business_password_field.getPassword());
        String phone =  phone_field.getText();
        String address = address_field.getText();
       
        //check for empty fields
        if(fullname.trim().equals("") || username.trim().equals("") ||
               password.trim().equals("") || confirm_password.trim().equals("")
                || business_password.trim().equals("") || phone.trim().equals("") || address.trim().equals("") )
        {
            JOptionPane.showMessageDialog(null,"One or More Fields Are Empty","Empty Fields",2);
            return false;
        }
        //check if two passwords are equals
        else if(!password.equals(confirm_password))
        {
            JOptionPane.showMessageDialog(null, "Password Doesn't Match","Confirm Password",2);
            return false;
        }
        
        
        //if everything is ok
        else
        {
            return true;
        }
        
    }
    
    public boolean checkUsername(String username)
    {
        PreparedStatement st;
        ResultSet rs;
        boolean username_exist= false;
        
        String query = "SELECT * FROM `employee` WHERE `username` = ?";
        
        try {
            st = CarRentalManagementSystem.getConnection().prepareStatement(query);
            st.setString(1, username);
            rs = st.executeQuery();
            
            if(rs.next())
            {
                username_exist= true;
                JOptionPane.showMessageDialog(null,"This Username is Already in Use, Choose Another One","Username Failed",2);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeRegister.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return username_exist;
      
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeRegister().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address_field;
    private javax.swing.JLabel address_icon;
    private javax.swing.JLabel address_label;
    private javax.swing.JLabel backicon;
    private javax.swing.JLabel backtext;
    private javax.swing.JPasswordField business_password_field;
    private javax.swing.JLabel business_password_label;
    private javax.swing.JLabel exit_icon;
    private javax.swing.JLabel fullname_label;
    private javax.swing.JTextField fullname_text;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel key_icon;
    private javax.swing.JLabel minimize_icon;
    private javax.swing.JPasswordField password_field;
    private javax.swing.JPasswordField password_field1;
    private javax.swing.JLabel password_label;
    private javax.swing.JLabel password_label1;
    private javax.swing.JTextField phone_field;
    private javax.swing.JLabel phone_icon;
    private javax.swing.JLabel phone_label;
    private javax.swing.JButton register_button;
    private javax.swing.JLabel register_label;
    private javax.swing.JLabel register_logo;
    private javax.swing.JLabel user_icon;
    private javax.swing.JLabel username_label;
    private javax.swing.JTextField username_text;
    // End of variables declaration//GEN-END:variables
}
